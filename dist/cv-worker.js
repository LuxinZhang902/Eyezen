(()=>{"use strict";var t,e,s,a,i={d:(t,e)=>{for(var s in e)i.o(e,s)&&!i.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:e[s]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},r={};i.r(r),i.d(r,{default:()=>h}),function(t){t.GOOD="good",t.FORWARD="forward",t.TILTED="tilted",t.TOO_CLOSE="too_close",t.TOO_FAR="too_far"}(t||(t={})),function(t){t.GOOD="good",t.TIRED="tired",t.CRITICAL="critical"}(e||(e={})),function(t){t.MICRO="micro",t.SHORT="short",t.LONG="long"}(s||(s={})),function(t){t.ZAN_ZHU="zan_zhu",t.SI_BAI="si_bai",t.JING_MING="jing_ming"}(a||(a={})),Error,a.ZAN_ZHU,a.SI_BAI,a.JING_MING;class n{static calculateEAR(t){if(t.length<6)throw new Error("Insufficient eye landmarks for EAR calculation");const[e,s,a,i,r,n]=t;return(this.euclideanDistance(s,n)+this.euclideanDistance(a,r))/(2*this.euclideanDistance(e,i))}static calculateAverageEAR(t,e){return(this.calculateEAR(t)+this.calculateEAR(e))/2}static euclideanDistance(t,e){const s=t.x-e.x,a=t.y-e.y,i=t.z-e.z;return Math.sqrt(s*s+a*a+i*i)}}class o{constructor(t=30,e=.2){this.earHistory=[],this.windowSize=t,this.closureThreshold=e}addEARValue(t){return this.earHistory.push(t),this.earHistory.length>this.windowSize&&this.earHistory.shift(),this.calculatePERCLOS()}calculatePERCLOS(){return 0===this.earHistory.length?0:this.earHistory.filter(t=>t<this.closureThreshold).length/this.earHistory.length*100}reset(){this.earHistory=[]}getWindowSize(){return this.earHistory.length}}class c{constructor(t=.2,e=100,s=400){this.earHistory=[],this.blinkCount=0,this.lastBlinkTime=0,this.blinkThreshold=t,this.minBlinkDuration=e,this.maxBlinkDuration=s}processEAR(t,e){return this.earHistory.push(t),this.earHistory.length>10&&this.earHistory.shift(),!!this.detectBlinkPattern(e)&&(this.blinkCount++,this.lastBlinkTime=e,!0)}getBlinkRate(t=6e4){const e=Date.now(),s=Math.min(t,e-this.lastBlinkTime);return 0===s?0:this.blinkCount/s*6e4}reset(){this.earHistory=[],this.blinkCount=0,this.lastBlinkTime=Date.now()}detectBlinkPattern(t){if(this.earHistory.length<3)return!1;const e=this.earHistory.slice(-3),[s,a,i]=e;return s>this.blinkThreshold&&a<=this.blinkThreshold&&(void 0===i||i>this.blinkThreshold)}}class l{static estimatePose(t){const e=t[1],s=t[33],a=t[263],i=t[61],r=t[291],n=Math.abs(s.x-a.x),o=(s.x+a.x)/2,c=(e.x-o)/n,l=(s.y+a.y)/2,h=(i.y+r.y)/2,u=Math.abs(h-l),d=(e.y-l)/u,m=(a.y-s.y)/(a.x-s.x),g=Math.atan(m);return{pitch:180*d/Math.PI,yaw:180*c/Math.PI,roll:180*g/Math.PI}}static classifyPosture(e){const{pitch:s,yaw:a,roll:i}=e;return Math.abs(s)>15?s>0?t.FORWARD:t.GOOD:Math.abs(a)>20||Math.abs(i)>15?t.TILTED:t.GOOD}}const h=new class{constructor(){this.faceLandmarker=null,this.isProcessing=!1,this.lastFrameTime=0,this.frameCount=0,this.targetFPS=15,this.frameInterval=1e3/this.targetFPS,this.perclosCalculator=new o(30,.2),this.blinkDetector=new c(.2,100,400),self.addEventListener("message",this.handleMessage.bind(this))}async handleMessage(t){const{type:e,data:s}=t.data;try{switch(e){case"init":await this.initialize(s);break;case"process":await this.processFrame(s);break;case"stop":this.stopProcessing();break;case"cleanup":await this.cleanup();break;default:this.postError(`Unknown message type: ${e}`)}}catch(t){const s=t instanceof Error?t.message:String(t);this.postError(`Error handling ${e}: ${s}`)}}async initialize(t){try{const e=await FilesetResolver.forVisionTasks("https://cdn.jsdelivr.net/npm/@mediapipe/tasks-vision@latest/wasm");this.faceLandmarker=await FaceLandmarker.createFromOptions(e,{baseOptions:{modelAssetPath:t.modelPath||"/assets/wasm/face_landmarker.task",delegate:"CPU"},runningMode:"VIDEO",numFaces:1,minFaceDetectionConfidence:.5,minFacePresenceConfidence:.5,minTrackingConfidence:.5,outputFaceBlendshapes:!1,outputFacialTransformationMatrixes:!1}),this.postMessage({type:"ready",data:{message:"CV Worker initialized successfully"}})}catch(t){const e=t instanceof Error?t.message:String(t);this.postError(`Failed to initialize MediaPipe: ${e}`)}}async processFrame(t){if(!this.faceLandmarker||!this.isProcessing)return;const e=performance.now();if(!(e-this.lastFrameTime<this.frameInterval))try{const{imageData:s,timestamp:a}=t,i=new OffscreenCanvas(s.width,s.height),r=i.getContext("2d");r.putImageData(s,0,0);const n=await this.faceLandmarker.detectForVideo(i,a);if(n.faceLandmarks&&n.faceLandmarks.length>0){const t=this.extractMetrics(n.faceLandmarks[0],a);this.postMessage({type:"metrics",data:t})}r.clearRect(0,0,i.width,i.height),this.lastFrameTime=e,this.frameCount++}catch(t){const e=t instanceof Error?t.message:String(t);this.postError(`Frame processing error: ${e}`)}}extractMetrics(t,e){try{const s=this.getEyeLandmarks(t,"left"),a=this.getEyeLandmarks(t,"right"),i=n.calculateAverageEAR(s,a),r=this.perclosCalculator.addEARValue(i),o=(this.blinkDetector.processEAR(i,e),this.blinkDetector.getBlinkRate()),c=l.estimatePose(t),h=l.classifyPosture(c);return{blinkRate:o,fatigueIndex:this.calculateFatigueIndex({ear:i,perclos:r,blinkRate:o,posture:h}),posture:h,earValue:i,perclosValue:r,timestamp:e}}catch(t){const e=t instanceof Error?t.message:String(t);throw new Error(`Metrics extraction failed: ${e}`)}}getEyeLandmarks(t,e){return("left"===e?[33,7,163,144,145,153,154,155,133,173,157,158,159,160,161,246]:[362,382,381,380,374,373,390,249,263,466,388,387,386,385,384,398]).map(e=>t[e]).filter(Boolean)}calculateFatigueIndex(e){const{ear:s,perclos:a,blinkRate:i,posture:r}=e;let n=0;n+=Math.max(0,(.3-s)/.3*40),n+=Math.min(40,2*a);const o=Math.abs(i-15);return n+=Math.min(10,o/2),n+=r===t.GOOD?0:r===t.FORWARD?8:r===t.TILTED?5:10,Math.min(100,Math.max(0,n))}startProcessing(){this.isProcessing=!0,this.frameCount=0,this.lastFrameTime=0,this.perclosCalculator.reset(),this.blinkDetector.reset()}stopProcessing(){this.isProcessing=!1,this.postMessage({type:"stopped",data:{frameCount:this.frameCount}})}async cleanup(){this.isProcessing=!1,this.faceLandmarker&&(this.faceLandmarker.close(),this.faceLandmarker=null),this.perclosCalculator.reset(),this.blinkDetector.reset(),this.postMessage({type:"stopped",data:{message:"CV Worker cleaned up"}})}postMessage(t){self.postMessage(t)}postError(t){this.postMessage({type:"error",data:{error:t}})}}})();