"use strict";(self.webpackChunkeyezen_chrome_extension=self.webpackChunkeyezen_chrome_extension||[]).push([[123],{123:(e,t,a)=>{a.r(t),a.d(t,{ChromeStorageService:()=>i,DataMigrationService:()=>o,IndexedDBService:()=>s});var r=a(235);class i{static async initialize(){try{if(!this.isChromeApiAvailable())return void console.warn("Chrome API not available, skipping initialization");if(!await this.getUserData()){const e={settings:r.DEFAULT_SETTINGS,metrics:[],breaks:[],events:[],score:{current:50,daily:50,weekly:50,trend:"stable"},lastUpdated:Date.now()};await this.saveUserData(e)}}catch(e){throw console.error("Failed to initialize storage:",e),new Error("Storage initialization failed")}}static isChromeApiAvailable(){return"undefined"!=typeof chrome&&void 0!==chrome.storage&&void 0!==chrome.storage.local}static async getUserData(){try{return this.isChromeApiAvailable()?(await chrome.storage.local.get([this.STORAGE_KEYS.USER_DATA]))[this.STORAGE_KEYS.USER_DATA]||null:(console.warn("Chrome API not available, returning mock data"),null)}catch(e){return console.error("Failed to get user data:",e),null}}static async saveUserData(e){try{if(!this.isChromeApiAvailable())return void console.warn("Chrome API not available, skipping save");e.lastUpdated=Date.now(),await chrome.storage.local.set({[this.STORAGE_KEYS.USER_DATA]:e})}catch(e){throw console.error("Failed to save user data:",e),new Error("Failed to save user data")}}static async getSettings(){try{const e=await this.getUserData();return e?.settings||r.DEFAULT_SETTINGS}catch(e){return console.error("Failed to get settings:",e),r.DEFAULT_SETTINGS}}static async updateSettings(e){try{const t=await this.getUserData();t&&(t.settings={...t.settings,...e},await this.saveUserData(t))}catch(e){throw console.error("Failed to update settings:",e),new Error("Failed to update settings")}}static async addMetrics(e){try{const t=await this.getUserData();if(t){t.metrics.push(e);const a=t.settings.dataRetention,r=Date.now()-24*a*60*60*1e3;t.metrics=t.metrics.filter(e=>e.timestamp>r),await this.saveUserData(t)}}catch(e){throw console.error("Failed to add metrics:",e),new Error("Failed to add metrics")}}static async getMetrics(e,t){try{const a=await this.getUserData();if(!a)return[];let r=a.metrics;return e&&(r=r.filter(t=>t.timestamp>=e.getTime())),t&&(r=r.filter(e=>e.timestamp<=t.getTime())),r.sort((e,t)=>e.timestamp-t.timestamp)}catch(e){return console.error("Failed to get metrics:",e),[]}}static async addBreakSession(e){try{const t=await this.getUserData();if(t){t.breaks.push(e);const a=t.settings.dataRetention,r=Date.now()-24*a*60*60*1e3;t.breaks=t.breaks.filter(e=>e.startTime>r),await this.saveUserData(t)}}catch(e){throw console.error("Failed to add break session:",e),new Error("Failed to add break session")}}static async updateBreakSession(e,t){try{const a=await this.getUserData();if(a){const r=a.breaks.findIndex(t=>t.id===e);-1!==r&&(a.breaks[r]={...a.breaks[r],...t},await this.saveUserData(a))}}catch(e){throw console.error("Failed to update break session:",e),new Error("Failed to update break session")}}static async getBreakSessions(e,t){try{const a=await this.getUserData();if(!a)return[];let r=a.breaks;return e&&(r=r.filter(t=>t.startTime>=e.getTime())),t&&(r=r.filter(e=>e.startTime<=t.getTime())),r.sort((e,t)=>e.startTime-t.startTime)}catch(e){return console.error("Failed to get break sessions:",e),[]}}static async addEvent(e){try{const t=await this.getUserData();if(t){t.events.push(e);const a=t.settings.dataRetention,r=Date.now()-24*a*60*60*1e3;t.events=t.events.filter(e=>e.timestamp>r),await this.saveUserData(t)}}catch(e){throw console.error("Failed to add event:",e),new Error("Failed to add event")}}static async getStorageInfo(){try{return{used:await chrome.storage.local.getBytesInUse(),quota:chrome.storage.local.QUOTA_BYTES}}catch(e){return console.error("Failed to get storage info:",e),{used:0,quota:0}}}static async clearAllData(){try{await chrome.storage.local.clear(),await this.initialize()}catch(e){throw console.error("Failed to clear data:",e),new Error("Failed to clear data")}}static async exportData(){try{const e=await this.getUserData();if(!e)throw new Error("No data to export");return JSON.stringify(e,null,2)}catch(e){throw console.error("Failed to export data:",e),new Error("Failed to export data")}}static async importData(e){try{const t=JSON.parse(e);if(!t.settings||!t.metrics||!t.breaks)throw new Error("Invalid data format");await this.saveUserData(t)}catch(e){throw console.error("Failed to import data:",e),new Error("Failed to import data")}}}i.STORAGE_KEYS={USER_DATA:"eyezen_user_data",SETTINGS:"eyezen_settings",METRICS:"eyezen_metrics",BREAKS:"eyezen_breaks",EVENTS:"eyezen_events",LAST_SYNC:"eyezen_last_sync"};class s{static async initialize(){return new Promise((e,t)=>{const a=indexedDB.open(this.DB_NAME,this.DB_VERSION);a.onerror=()=>{t(new Error("Failed to open IndexedDB"))},a.onsuccess=()=>{this.db=a.result,e()},a.onupgradeneeded=e=>{const t=e.target.result;if(!t.objectStoreNames.contains(this.STORES.METRICS)){const e=t.createObjectStore(this.STORES.METRICS,{keyPath:"timestamp"});e.createIndex("date","date",{unique:!1}),e.createIndex("fatigueIndex","fatigueIndex",{unique:!1})}if(!t.objectStoreNames.contains(this.STORES.BREAKS)){const e=t.createObjectStore(this.STORES.BREAKS,{keyPath:"id"});e.createIndex("startTime","startTime",{unique:!1}),e.createIndex("type","type",{unique:!1})}if(!t.objectStoreNames.contains(this.STORES.EVENTS)){const e=t.createObjectStore(this.STORES.EVENTS,{keyPath:"id"});e.createIndex("timestamp","timestamp",{unique:!1}),e.createIndex("type","type",{unique:!1})}t.objectStoreNames.contains(this.STORES.CACHE)||t.createObjectStore(this.STORES.CACHE,{keyPath:"key"})}})}static async storeMetrics(e){return this.db||await this.initialize(),new Promise((t,a)=>{const r=this.db.transaction([this.STORES.METRICS],"readwrite"),i=r.objectStore(this.STORES.METRICS);e.forEach(e=>{const t={...e,date:new Date(e.timestamp).toISOString().split("T")[0]};i.put(t)}),r.oncomplete=()=>t(),r.onerror=()=>a(new Error("Failed to store metrics"))})}static async queryMetrics(e){return this.db||await this.initialize(),new Promise((t,a)=>{const r=this.db.transaction([this.STORES.METRICS],"readonly"),i=r.objectStore(this.STORES.METRICS),s=[];let o;if(e.startDate||e.endDate){const t=i.index("timestamp"),a=IDBKeyRange.bound(e.startDate?.getTime()||0,e.endDate?.getTime()||Date.now());o=t.openCursor(a)}else o=i.openCursor();o.onsuccess=t=>{const a=t.target.result;if(a){const t=a.value;(!e.fatigueThreshold||t.fatigueIndex>=e.fatigueThreshold)&&s.push(t),(!e.limit||s.length<e.limit)&&a.continue()}},r.oncomplete=()=>t(s),r.onerror=()=>a(new Error("Failed to query metrics"))})}static async getDailyAggregates(e){const t=new Date(e);t.setHours(0,0,0,0);const a=new Date(e);a.setHours(23,59,59,999);const r=await this.queryMetrics({startDate:t,endDate:a});if(0===r.length)return{avgFatigue:0,avgBlinkRate:0,totalReadings:0,peakFatigue:0};const i=r.reduce((e,t)=>e+t.fatigueIndex,0),s=r.reduce((e,t)=>e+t.blinkRate,0),o=Math.max(...r.map(e=>e.fatigueIndex));return{avgFatigue:i/r.length,avgBlinkRate:s/r.length,totalReadings:r.length,peakFatigue:o}}static async setCache(e,t,a=36e5){return this.db||await this.initialize(),new Promise((r,i)=>{const s=this.db.transaction([this.STORES.CACHE],"readwrite").objectStore(this.STORES.CACHE),o={key:e,data:t,expires:Date.now()+a},n=s.put(o);n.onsuccess=()=>r(),n.onerror=()=>i(new Error("Failed to set cache"))})}static async getCache(e){return this.db||await this.initialize(),new Promise((t,a)=>{const r=this.db.transaction([this.STORES.CACHE],"readonly").objectStore(this.STORES.CACHE).get(e);r.onsuccess=()=>{const e=r.result;e&&e.expires>Date.now()?t(e.data):t(null)},r.onerror=()=>a(new Error("Failed to get cache"))})}static async clearExpiredCache(){return this.db||await this.initialize(),new Promise((e,t)=>{const a=this.db.transaction([this.STORES.CACHE],"readwrite");a.objectStore(this.STORES.CACHE).openCursor().onsuccess=e=>{const t=e.target.result;t&&(t.value.expires<=Date.now()&&t.delete(),t.continue())},a.oncomplete=()=>e(),a.onerror=()=>t(new Error("Failed to clear expired cache"))})}static async getDatabaseSize(){return this.db||await this.initialize(),new Promise(e=>{let t=0;const a=Array.from(this.db.objectStoreNames);let r=0;a.forEach(i=>{const s=this.db.transaction([i],"readonly").objectStore(i).count();s.onsuccess=()=>{t+=s.result,r++,r===a.length&&e(t)}})})}static async clearDatabase(){return this.db||await this.initialize(),new Promise((e,t)=>{const a=Array.from(this.db.objectStoreNames),r=this.db.transaction(a,"readwrite");a.forEach(e=>{r.objectStore(e).clear()}),r.oncomplete=()=>e(),r.onerror=()=>t(new Error("Failed to clear database"))})}}s.DB_NAME="EyeZenDB",s.DB_VERSION=1,s.STORES={METRICS:"metrics",BREAKS:"breaks",EVENTS:"events",CACHE:"cache"},s.db=null;class o{static async runMigrations(){try{const e=await this.getCurrentMigrationVersion();e<this.CURRENT_VERSION&&(await this.migrate(e,this.CURRENT_VERSION),await this.setMigrationVersion(this.CURRENT_VERSION))}catch(e){throw console.error("Migration failed:",e),new Error("Data migration failed")}}static async getCurrentMigrationVersion(){try{return(await chrome.storage.local.get([this.MIGRATION_KEY]))[this.MIGRATION_KEY]||0}catch(e){return 0}}static async setMigrationVersion(e){await chrome.storage.local.set({[this.MIGRATION_KEY]:e})}static async migrate(e,t){console.log(`Migrating data from version ${e} to ${t}`),await i.initialize(),await s.initialize()}}o.MIGRATION_KEY="eyezen_migration_version",o.CURRENT_VERSION=1},235:(e,t,a)=>{var r,i,s,o;a.r(t),a.d(t,{BreakType:()=>s,DEFAULT_SETTINGS:()=>c,EyeZenError:()=>n,MASSAGE_POINTS:()=>l,MassagePointType:()=>o,PostureStatus:()=>r,UserStatus:()=>i}),function(e){e.GOOD="good",e.FORWARD="forward",e.TILTED="tilted",e.TOO_CLOSE="too_close",e.TOO_FAR="too_far"}(r||(r={})),function(e){e.GOOD="good",e.TIRED="tired",e.CRITICAL="critical"}(i||(i={})),function(e){e.MICRO="micro",e.SHORT="short",e.LONG="long"}(s||(s={})),function(e){e.ZAN_ZHU="zan_zhu",e.SI_BAI="si_bai",e.JING_MING="jing_ming"}(o||(o={}));class n extends Error{constructor(e,t,a="medium"){super(e),this.code=t,this.severity=a,this.name="EyeZenError"}}const c={cameraEnabled:!1,detectionSensitivity:"medium",fatigueThreshold:70,reminderEnabled:!0,reminderInterval:20,breakDuration:20,dataRetention:30,metricsOnly:!1,language:"en",theme:"auto",notifications:!0,sounds:!0,dailyBreakGoal:8,eyeScoreGoal:80},l={[o.ZAN_ZHU]:{name:"Zan Zhu",chineseName:"攒竹",position:{x:.3,y:.25},description:"Inner end of eyebrow",benefits:["Relieves eye strain","Reduces headaches","Improves focus"],duration:30},[o.SI_BAI]:{name:"Si Bai",chineseName:"四白",position:{x:.35,y:.45},description:"Below the center of the eye",benefits:["Brightens eyes","Reduces dark circles","Improves circulation"],duration:30},[o.JING_MING]:{name:"Jing Ming",chineseName:"睛明",position:{x:.25,y:.35},description:"Inner corner of the eye",benefits:["Clears vision","Reduces eye fatigue","Calms the mind"],duration:30}}}}]);