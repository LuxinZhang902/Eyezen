(()=>{"use strict";var e,t={727:(e,t,r)=>{r.r(t),r.d(t,{default:()=>h});var o=r(123),s=r(235);class n{constructor(){this.session=null,this.isInitialized=!1}async initialize(){if(!("LanguageModel"in window))throw console.warn("Chrome AI Prompt API not available"),new Error('Chrome AI is not available. Please ensure you are using Chrome 127+ with the following flags enabled:\n\n1. chrome://flags/#optimization-guide-on-device-model ‚Üí "Enabled BypassPerfRequirement"\n2. chrome://flags/#prompt-api-for-gemini-nano ‚Üí "Enabled"\n\nThen restart Chrome completely.');const e=await window.LanguageModel.availability();if(console.log("Chrome AI model availability:",e),"no"===e)throw console.warn("Chrome AI model not available on this device"),new Error("Chrome AI is not available on this device. This may be due to:\n\n‚Ä¢ Hardware requirements not met (need 22GB+ free space, 4GB+ VRAM)\n‚Ä¢ Operating system not supported (requires macOS 13+ or Windows 10+)\n‚Ä¢ Chrome flags not properly enabled\n\nPlease check the requirements and try again.");if("after-download"===e)console.log("Chrome AI model needs to be downloaded. Starting download..."),this.session=await window.languageModel.create({topK:3,temperature:.3,monitor(e){e.addEventListener("downloadprogress",e=>{const t=Math.round(100*e.loaded);console.log(`Chrome AI model download progress: ${t}%`)})}});else{if("available"!==e)throw console.warn("Unknown Chrome AI availability status:",e),new Error(`Chrome AI availability status is unknown: ${e}`);this.session=await window.LanguageModel.create({topK:3,temperature:.3})}this.isInitialized=!0,console.log("Chrome AI service initialized successfully")}async generateHealthSuggestion(e,t,r){this.isInitialized||await this.initialize();try{const o=this.buildHealthPrompt(e,t,r);console.log("Sending prompt to Chrome AI:",o);const s=await this.session.prompt(o);return console.log("Chrome AI response:",s),this.parseAIResponse(s,e,t,r)}catch(e){console.error("Chrome AI suggestion generation failed:",e);const t=e instanceof Error?e.message:"Unknown error occurred";throw new Error(`Chrome AI failed to generate suggestion: ${t}`)}}buildHealthPrompt(e,t,r){return`As an eye health expert, provide a brief personalized tip (max 40 words) based on these metrics:\n\nEye Health Score: ${e}/100\nFatigue Level: ${t}/100\nBlink Rate: ${r.blinkRate} blinks/min (normal: 15-20)\nEye Strain Index: ${(100*r.fatigueIndex).toFixed(1)}%\nPosture Status: ${r.posture}\n\nProvide a unique suggestion that is NOT a break activity. Focus on:\n- Environment adjustments (lighting, screen distance, humidity)\n- Workspace ergonomics (monitor height, chair position)\n- Daily habits (hydration, nutrition, sleep)\n- Posture improvements\n\nProvide:\n1. One specific actionable tip\n2. Urgency level (low/medium/high)\n3. Category (environment/posture/habits/nutrition/workspace)\n\nFormat: "[Tip] | [Urgency] | [Category]"`}parseAIResponse(e,t,r,o){try{const t=e.split("|").map(e=>e.trim());if(t.length>=3){const e=t[0];return{message:e,severity:this.normalizeSeverity(t[1]),category:this.normalizeCategory(t[2]),confidence:.85}}}catch(e){console.warn("Failed to parse AI response:",e)}return{message:e.substring(0,100),severity:this.determineSeverity(t,r),category:this.determineCategory(r,o),confidence:.7}}normalizeSeverity(e){const t=e.toLowerCase();return t.includes("high")||t.includes("urgent")||t.includes("critical")?"high":t.includes("medium")||t.includes("moderate")?"medium":"low"}normalizeCategory(e){const t=e.toLowerCase();return t.includes("environment")||t.includes("lighting")||t.includes("humidity")?"environment":t.includes("posture")||t.includes("position")?"posture":t.includes("habits")||t.includes("sleep")||t.includes("routine")?"habits":t.includes("nutrition")||t.includes("hydration")||t.includes("food")?"nutrition":t.includes("workspace")||t.includes("ergonomic")||t.includes("monitor")?"workspace":"environment"}determineSeverity(e,t){return t>70||e<30?"high":t>40||e<60?"medium":"low"}determineCategory(e,t){return t.posture===s.PostureStatus.FORWARD||t.posture===s.PostureStatus.TILTED?"posture":e>60?"habits":t.blinkRate<10?"environment":t.fatigueIndex>.5?"workspace":"environment"}getFallbackSuggestion(e,t,r){const o=this.determineSeverity(e,t),s=this.determineCategory(t,r);return{message:{environment:"Adjust your screen brightness to match room lighting and increase humidity.",posture:"Position your monitor 20-26 inches away and top of screen at eye level.",habits:"Stay hydrated with 8 glasses of water daily and get 7-8 hours of sleep.",nutrition:"Include omega-3 rich foods and leafy greens in your diet for eye health.",workspace:"Use proper lighting behind your screen and consider blue light filters."}[s],severity:o,category:s,confidence:.6}}async destroy(){if(this.session){try{await this.session.destroy()}catch(e){console.warn("Error destroying Chrome AI session:",e)}this.session=null}this.isInitialized=!1}}new n;const a="break-reminder",i="daily-summary",c="posture-check",l=1,d=30,m=1440,u=new class{constructor(){this.isInitialized=!1,this.activeBreakTabId=null}async initialize(){if(!this.isInitialized)try{this.chromeAI=new n,chrome.alarms.onAlarm.addListener(this.handleAlarm.bind(this)),chrome.runtime.onMessage.addListener(this.handleMessage.bind(this)),chrome.runtime.onInstalled.addListener(this.handleInstall.bind(this)),chrome.runtime.onStartup.addListener(this.handleStartup.bind(this)),chrome.tabs.onRemoved.addListener(this.handleTabRemoved.bind(this)),await this.setupDefaultAlarms(),this.isInitialized=!0,console.log("EyeZen Background Service initialized")}catch(e){console.error("Failed to initialize background service:",e)}}async handleAlarm(e){console.log("Alarm triggered:",e.name);try{switch(e.name){case a:await this.handleBreakReminder();break;case c:await this.handlePostureCheck();break;case i:await this.handleDailySummary();break;case"weekly-summary":await this.handleWeeklySummary();break;default:console.log("Unknown alarm:",e.name)}}catch(t){console.error("Error handling alarm:",e.name,t)}}async handleMessage(e,t,r){"REQUEST_CAMERA"!==e.type&&"STOP_CAMERA"!==e.type&&"GET_CAMERA_STATE"!==e.type&&console.log("üîÑ Service Worker received message:",e.type||e.action,"from:",t.tab?.url||"extension");try{if("REQUEST_CAMERA"===e.type||"STOP_CAMERA"===e.type||"GET_CAMERA_STATE"===e.type)return this.forwardToOffscreenDocument(e,r),!0;if("POPUP_TEST"===e.type)return console.log("üß™ Service Worker: Received test message from popup:",e.data),r({success:!0,message:"Test message received by service worker"}),!1;if("EYE_METRICS"===e.type){const t=(new Date).toISOString();console.log(`üëÅÔ∏è [${t}] Service Worker: Received EYE_METRICS from offscreen:`,e.data),console.log(`üì§ [${t}] Service Worker: Forwarding eye metrics to popup and dashboard`);try{await chrome.storage.local.set({latest_eye_metrics:{data:e.data,timestamp:Date.now()}}),console.log(`üíæ [${t}] Service Worker: Stored eye metrics in storage`)}catch(e){console.log(`‚ùå [${t}] Service Worker: Error storing metrics:`,e)}return chrome.runtime.sendMessage(e).catch(e=>{console.log(`‚ö†Ô∏è [${t}] Service Worker: Error forwarding to popup (expected if popup closed):`,e)}),this.forwardToDashboardTabs(e),r({success:!0}),!1}switch(e.action){case"START_BREAK":console.log("üõë Service Worker: Starting break:",e.breakType),await this.startBreak(e.breakType),r({success:!0});break;case"END_BREAK":console.log("‚úÖ Service Worker: Ending break:",e.breakId),await this.endBreak(e.breakId),r({success:!0});break;case"UPDATE_SETTINGS":console.log("‚öôÔ∏è Service Worker: Updating settings"),await this.updateSettings(e.settings),r({success:!0});break;case"GET_STATUS":const t=await this.getStatus();console.log("üìä Service Worker: Returning status"),r({success:!0,data:t});break;case"SNOOZE_REMINDER":console.log("üò¥ Service Worker: Snoozing reminder for",e.minutes||5,"minutes"),await this.snoozeReminder(e.minutes||5),r({success:!0});break;default:console.warn("‚ùì Service Worker: Unknown action:",e.action||e.type),r({success:!1,error:"Unknown action"})}}catch(e){console.error("‚ùå Service Worker: Error handling message:",e),r({success:!1,error:String(e)})}return!1}async handleInstall(e){"install"===e.reason?(console.log("EyeZen installed for the first time"),await this.setupInitialData(),await this.showNotification({type:"basic",iconUrl:"assets/icons/icon-48.svg",title:"Welcome to EyeZen! üëÅÔ∏è",message:"Your AI eye health companion is ready. Click to get started!"})):"update"===e.reason&&console.log("EyeZen updated to version:",chrome.runtime.getManifest().version)}async handleStartup(){console.log("EyeZen service worker started"),await this.setupDefaultAlarms()}async handleTabRemoved(e){this.activeBreakTabId===e&&(this.activeBreakTabId=null,console.log("Break tab closed"))}async setupDefaultAlarms(){try{const e=await o.ChromeStorageService.getUserData(),t=e?.settings||s.DEFAULT_SETTINGS;if(await chrome.alarms.clearAll(),t.reminderEnabled??1){const e=t.reminderInterval??l;await chrome.alarms.create(a,{delayInMinutes:e,periodInMinutes:e})}(t.reminderEnabled??1)&&await chrome.alarms.create(c,{delayInMinutes:d,periodInMinutes:d});const r=new Date,n=new Date;n.setHours(20,0,0,0),n<=r&&n.setDate(n.getDate()+1),await chrome.alarms.create(i,{when:n.getTime(),periodInMinutes:m}),console.log("Default alarms set up successfully")}catch(e){console.error("Failed to setup default alarms:",e)}}async handleBreakReminder(){try{const e=await o.ChromeStorageService.getUserData();if(!e||!e.settings.reminderEnabled)return;if(e.breaks.find(e=>!e.completed))return void console.log("User is already in a break, skipping reminder");const t=e.metrics.slice(-5),r=t.reduce((e,t)=>e+(t.fatigueIndex||0),0)/t.length;let n="üëÅÔ∏è Time for an Eye Break!",a="Follow the 20-20-20 rule: Look at something 20 feet away for 20 seconds.",i=0;if(r>.7)n="‚ö†Ô∏è High Eye Strain Detected!",a="Your eyes need immediate rest. Take a break now to prevent fatigue.",i=2;else if(r>.5)n="üò¥ Eyes Getting Tired",a="Time for a refreshing eye break. Your future self will thank you!",i=1;else try{const e=await this.chromeAI.generateHealthSuggestion(100*r,100*r,{blinkRate:15,fatigueIndex:r,posture:s.PostureStatus.GOOD,earValue:.25,perclosValue:.2,timestamp:Date.now()});n=`ü§ñ AI Rest Suggestion (${e.category})`,a=e.message,i=1}catch(e){console.error("Failed to generate AI suggestion:",e),n="‚è∞ Break Time Reminder",a="Time for your scheduled eye break! Follow the 20-20-20 rule: Look at something 20 feet away for 20 seconds.",i=1}await this.showNotification({type:"basic",iconUrl:"assets/icons/icon-48.svg",title:n,message:a,priority:i,buttons:[{title:"Start Break"},{title:"Snooze 5min"}]})}catch(e){console.error("Error in break reminder:",e)}}async handlePostureCheck(){try{const e=await o.ChromeStorageService.getUserData();if(!e||!e.settings.reminderEnabled)return;await this.showNotification({type:"basic",iconUrl:"assets/icons/icon-48.svg",title:"üßò Posture Check",message:"Sit up straight, relax your shoulders, and adjust your screen height.",priority:0})}catch(e){console.error("Error in posture check:",e)}}async handleDailySummary(){try{const e=await o.ChromeStorageService.getUserData();if(!e)return;const t=new Date;t.setHours(0,0,0,0);const r=e.metrics.filter(e=>{const r=new Date(e.timestamp);return r.setHours(0,0,0,0),r.getTime()===t.getTime()}),s=e.breaks.filter(e=>{const r=new Date(e.startTime);return r.setHours(0,0,0,0),r.getTime()===t.getTime()&&e.completed}),n=r.length>0?r.reduce((e,t)=>e+(100-100*(t.fatigueIndex||0)),0)/r.length:50;await this.showNotification({type:"basic",iconUrl:"assets/icons/icon-48.svg",title:"üìä Daily Eye Health Summary",message:`Eye Health Score: ${Math.round(n)}/100 | Breaks Taken: ${s.length}`,priority:0})}catch(e){console.error("Error in daily summary:",e)}}async handleWeeklySummary(){try{await this.showNotification({type:"basic",iconUrl:"assets/icons/icon-48.svg",title:"üìà Weekly Eye Health Report",message:"Your weekly eye health report is ready! Click to view insights.",priority:1})}catch(e){console.error("Error in weekly summary:",e)}}async startBreak(e){try{const t=Date.now().toString(),r={id:t,type:e,duration:e===s.BreakType.MICRO?20:e===s.BreakType.SHORT?300:900,startTime:Date.now(),completed:!1,activities:[]},n=await o.ChromeStorageService.getUserData();n&&(n.breaks.push(r),await o.ChromeStorageService.saveUserData(n));const a=chrome.runtime.getURL(`break-ritual.html?type=${e}&id=${t}`),i=await chrome.tabs.create({url:a});this.activeBreakTabId=i.id||null,console.log("Break started:",e,t)}catch(e){throw console.error("Error starting break:",e),e}}async endBreak(e){try{const t=await o.ChromeStorageService.getUserData();if(t){const r=t.breaks.findIndex(t=>t.id===e);-1!==r&&(t.breaks[r].completed=!0,t.breaks[r].endTime=Date.now(),await o.ChromeStorageService.saveUserData(t))}console.log("Break completed:",e)}catch(e){throw console.error("Error ending break:",e),e}}async updateSettings(e){try{await o.ChromeStorageService.updateSettings(e),await this.setupDefaultAlarms(),console.log("Settings updated:",e)}catch(e){throw console.error("Error updating settings:",e),e}}async getStatus(){try{const e=await o.ChromeStorageService.getUserData();return{isActive:!0,settings:e?.settings||{},lastBreak:e?.breaks.slice(-1)[0]||null,todayMetrics:e?.metrics.filter(e=>{const t=new Date;t.setHours(0,0,0,0);const r=new Date(e.timestamp);return r.setHours(0,0,0,0),r.getTime()===t.getTime()})||[]}}catch(e){throw console.error("Error getting status:",e),e}}async snoozeReminder(e){try{await chrome.alarms.clear(a),await chrome.alarms.create(a,{delayInMinutes:e}),console.log(`Break reminder snoozed for ${e} minutes`)}catch(e){throw console.error("Error snoozing reminder:",e),e}}async ensureOffscreenDocument(){console.log("üîç Checking for existing offscreen document...");const e=await chrome.runtime.getContexts({});console.log("üìã All existing contexts:",e);const t=e.find(e=>"OFFSCREEN_DOCUMENT"===e.contextType);t?console.log("‚úÖ Offscreen document already exists:",t):(console.log("üìÑ No offscreen document found, creating new one..."),await chrome.offscreen.createDocument({url:"offscreen.html",reasons:[chrome.offscreen.Reason.USER_MEDIA],justification:"Camera access for eye health monitoring"}),console.log("‚úÖ Offscreen document created successfully"))}async forwardToOffscreenDocument(e,t){console.log("üöÄ forwardToOffscreenDocument called with message:",e);try{console.log("üìÑ Ensuring offscreen document exists..."),await this.ensureOffscreenDocument(),console.log("‚úÖ Offscreen document ensured"),console.log("‚è≥ Waiting 500ms for offscreen document to be ready..."),await new Promise(e=>setTimeout(e,500)),console.log("‚úÖ Wait completed, sending message to offscreen document"),console.log("üì§ Sending message to offscreen document:",e),chrome.runtime.sendMessage(e,e=>{console.log("üì• Received response from offscreen document:",e),console.log("üîç Chrome runtime last error:",chrome.runtime.lastError),chrome.runtime.lastError?(console.error("‚ùå Error communicating with offscreen document:",chrome.runtime.lastError),t({success:!1,error:chrome.runtime.lastError.message})):(console.log("‚úÖ Forwarding response back to popup:",e),t(e))})}catch(e){console.error("‚ùå Error in forwardToOffscreenDocument:",e),t({success:!1,error:e instanceof Error?e.message:String(e)})}}async forwardToDashboardTabs(e){try{const t=await chrome.tabs.query({url:"*://*/eye-posture-dashboard.html"}),r=await chrome.tabs.query({url:"file://*/eye-posture-dashboard.html"}),o=[...t,...r];for(const t of o)t.id&&chrome.tabs.sendMessage(t.id,e).catch(()=>{});o.length>0&&console.log(`üìä Forwarded metrics to ${o.length} dashboard tab(s)`)}catch(e){console.error("‚ùå Failed to forward message to dashboard tabs:",e)}}async setupInitialData(){try{const e={settings:{cameraEnabled:!0,detectionSensitivity:"medium",fatigueThreshold:70,reminderEnabled:!0,reminderInterval:20,breakDuration:20,dataRetention:30,metricsOnly:!1,language:"en",theme:"light",notifications:!0,sounds:!0,dailyBreakGoal:8,eyeScoreGoal:80},metrics:[],breaks:[],events:[],score:{current:50,daily:50,weekly:50,trend:"stable"},lastUpdated:Date.now()};await o.ChromeStorageService.saveUserData(e),console.log("Initial data setup completed")}catch(e){console.error("Error setting up initial data:",e)}}async showNotification(e){try{const t=`eyezen-${Date.now()}`,r={type:"basic",iconUrl:"assets/icons/icon-48.svg",title:"EyeZen",message:"",priority:0,...e},o={type:"basic",iconUrl:r.iconUrl||"assets/icons/icon-48.svg",title:r.title||"EyeZen",message:r.message||""};r.buttons&&(o.buttons=r.buttons),await chrome.notifications.create(t,o),0===(e.priority||0)&&setTimeout(()=>{chrome.notifications.clear(t)},1e4)}catch(e){console.error("Error showing notification:",e)}}};u.initialize(),chrome.notifications.onClicked.addListener(e=>{e.startsWith("eyezen-")&&(chrome.action.openPopup(),chrome.notifications.clear(e))}),chrome.notifications.onButtonClicked.addListener((e,t)=>{e.startsWith("eyezen-")&&(0===t?u.initialize().then(()=>{chrome.runtime.sendMessage({action:"START_BREAK",breakType:s.BreakType.SHORT})}):1===t&&u.initialize().then(()=>{chrome.runtime.sendMessage({action:"SNOOZE_REMINDER",minutes:5})}),chrome.notifications.clear(e))});const h=u}},r={};function o(e){var s=r[e];if(void 0!==s)return s.exports;var n=r[e]={exports:{}};return t[e](n,n.exports,o),n.exports}o.m=t,e=[],o.O=(t,r,s,n)=>{if(!r){var a=1/0;for(d=0;d<e.length;d++){for(var[r,s,n]=e[d],i=!0,c=0;c<r.length;c++)(!1&n||a>=n)&&Object.keys(o.O).every(e=>o.O[e](r[c]))?r.splice(c--,1):(i=!1,n<a&&(a=n));if(i){e.splice(d--,1);var l=s();void 0!==l&&(t=l)}}return t}n=n||0;for(var d=e.length;d>0&&e[d-1][2]>n;d--)e[d]=e[d-1];e[d]=[r,s,n]},o.d=(e,t)=>{for(var r in t)o.o(t,r)&&!o.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e={471:0};o.O.j=t=>0===e[t];var t=(t,r)=>{var s,n,[a,i,c]=r,l=0;if(a.some(t=>0!==e[t])){for(s in i)o.o(i,s)&&(o.m[s]=i[s]);if(c)var d=c(o)}for(t&&t(r);l<a.length;l++)n=a[l],o.o(e,n)&&e[n]&&e[n][0](),e[n]=0;return o.O(d)},r=self.webpackChunkeyezen_chrome_extension=self.webpackChunkeyezen_chrome_extension||[];r.forEach(t.bind(null,0)),r.push=t.bind(null,r.push.bind(r))})();var s=o.O(void 0,[123],()=>o(727));s=o.O(s)})();